{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/app.routing.ts","webpack:///./src/app/home/home.component.css","webpack:///./src/app/home/home.component.html","webpack:///./src/app/home/home.component.ts","webpack:///./src/app/not-found/not-found.component.css","webpack:///./src/app/not-found/not-found.component.html","webpack:///./src/app/not-found/not-found.component.ts","webpack:///./src/app/pagination/pagination.component.css","webpack:///./src/app/pagination/pagination.component.html","webpack:///./src/app/pagination/pagination.component.ts","webpack:///./src/app/tasks/task-create/task-create.component.css","webpack:///./src/app/tasks/task-create/task-create.component.html","webpack:///./src/app/tasks/task-create/task-create.component.ts","webpack:///./src/app/tasks/task-update/task-update.component.css","webpack:///./src/app/tasks/task-update/task-update.component.html","webpack:///./src/app/tasks/task-update/task-update.component.ts","webpack:///./src/app/tasks/task.service.ts","webpack:///./src/app/tasks/tasks-list/tasks-list.component.css","webpack:///./src/app/tasks/tasks-list/tasks-list.component.html","webpack:///./src/app/tasks/tasks-list/tasks-list.component.ts","webpack:///./src/app/tasks/tasks.module.ts","webpack:///./src/app/tasks/tasks.routing.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts","webpack:///./src/shared/app-settings.service.ts","webpack:///./src/shared/app.settings.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error('Cannot find module \"' + req + '\".');\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \"#ph-logo {\\r\\n    width: 150px;\\r\\n}\\r\\n\\r\\n\"","module.exports = \"<nav class=\\\"navbar navbar-expand-md navbar-dark bg-dark fixed-top\\\">\\r\\n  <a class=\\\"navbar-brand\\\" href=\\\"http://powerhub.com\\\">\\r\\n    <img id=\\\"ph-logo\\\" src=\\\"/assets/img/ph-logo.png\\\"/>\\r\\n  </a>\\r\\n  <button class=\\\"navbar-toggler\\\" type=\\\"button\\\" data-toggle=\\\"collapse\\\" data-target=\\\"#navbarsExampleDefault\\\" aria-controls=\\\"navbarsExampleDefault\\\" aria-expanded=\\\"false\\\" aria-label=\\\"Toggle navigation\\\">\\r\\n    <span class=\\\"navbar-toggler-icon\\\"></span>\\r\\n  </button>\\r\\n\\r\\n  <div class=\\\"collapse navbar-collapse\\\" id=\\\"navbarsExampleDefault\\\">\\r\\n    <ul class=\\\"navbar-nav mr-auto\\\">\\r\\n      <li class=\\\"nav-item active\\\">\\r\\n        <a class=\\\"nav-link\\\" [routerLink]=\\\"['/tasks']\\\" [queryParams]=\\\"{ page: 1 }\\\" routerLinkActive=\\\"active\\\">Tasks</a>\\r\\n      </li>\\r\\n    </ul>\\r\\n  </div>\\r\\n</nav>\\r\\n\\r\\n<main role=\\\"main\\\" class=\\\"container\\\">\\r\\n  <router-outlet></router-outlet>\\r\\n</main>\\r\\n\\r\\n\"","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css']\r\n})\r\nexport class AppComponent {\r\n  title = 'app';\r\n}\r\n","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\n\r\nimport { AppComponent } from './app.component';\r\nimport { AppRouting } from './app.routing';\r\nimport { TasksModule } from 'src/app/tasks/tasks.module';\r\nimport { HomeComponent } from 'src/app/home/home.component';\r\nimport { NotFoundComponent } from 'src/app/not-found/not-found.component';\r\nimport { HttpClientModule, HttpClient } from '@angular/common/http';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    HomeComponent,\r\n    NotFoundComponent,\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    TasksModule,\r\n    HttpClientModule,\r\n    AppRouting,\r\n  ],\r\n  providers: [HttpClient],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }","import { RouterModule, Routes } from '@angular/router';\r\nimport { HomeComponent } from 'src/app/home/home.component';\r\nimport { NotFoundComponent } from 'src/app/not-found/not-found.component';\r\n\r\nconst appRoutes: Routes = [\r\n    { path: '', redirectTo: 'home', pathMatch: 'full' },\r\n    { path: 'home', component: HomeComponent },\r\n    { path: '**', component: NotFoundComponent },\r\n];\r\n  \r\nexport const AppRouting = RouterModule.forRoot(appRoutes, { \r\n    useHash: true\r\n});","module.exports = \"\"","module.exports = \"<h1>Welcome to PowerHub</h1>\\r\\n\"","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-home',\r\n  templateUrl: './home.component.html',\r\n  styleUrls: ['./home.component.css']\r\n})\r\nexport class HomeComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","module.exports = \"\"","module.exports = \"<p>\\r\\n  not-found works!\\r\\n</p>\\r\\n\"","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-not-found',\r\n  templateUrl: './not-found.component.html',\r\n  styleUrls: ['./not-found.component.css']\r\n})\r\nexport class NotFoundComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","module.exports = \"\"","module.exports = \"\\r\\n<ul *ngIf=\\\"pages.length > 1\\\" class=\\\"pagination\\\">\\r\\n  <li *ngIf=\\\"currentPage != 1\\\" class=\\\"page-item\\\">\\r\\n    <a [routerLink]=\\\"[routePath]\\\" [queryParams]=\\\"{ page: currentPage - 1 }\\\" class=\\\"page-link\\\" href=\\\"#\\\">Previous</a>\\r\\n  </li>\\r\\n  <li *ngFor=\\\"let p of pages\\\" class=\\\"page-item\\\" [ngClass]=\\\"{'active' : p === currentPage}\\\">\\r\\n    <a [routerLink]=\\\"[routePath]\\\" [queryParams]=\\\"{ page: p }\\\" class=\\\"page-link\\\" href=\\\"#\\\">{{p}}</a>\\r\\n  </li>\\r\\n  <li *ngIf=\\\"currentPage != pages.length\\\" class=\\\"page-item\\\">\\r\\n    <a [routerLink]=\\\"[routePath]\\\" [queryParams]=\\\"{ page: currentPage + 1 }\\\" class=\\\"page-link\\\" href=\\\"#\\\">Next</a>\\r\\n  </li>\\r\\n</ul>\"","import { Component, OnInit } from '@angular/core';\r\nimport { Input } from '@angular/core';\r\nimport { AppSettingsService } from '../../shared/app-settings.service';\r\n\r\n@Component({\r\n  selector: 'app-pagination',\r\n  templateUrl: './pagination.component.html',\r\n  styleUrls: ['./pagination.component.css']\r\n})\r\nexport class PaginationComponent implements OnInit {\r\n\r\n  @Input('total-records') set totalRecords(val:number) {\r\n    let totalPages = Math.ceil(val/this.settingsService.getSettings().PAGE_SIZE);\r\n    this.pages = Array(totalPages).fill(0).map((q,i) => i + 1);\r\n  };\r\n\r\n  @Input('current-page') currentPage:number;\r\n  @Input('route-path') routePath:string;\r\n\r\n  constructor(private settingsService:AppSettingsService) {}\r\n\r\n  pages:number[];\r\n\r\n  ngOnInit() {\r\n    this.pages = [];\r\n  }\r\n}\r\n","module.exports = \".control-label.required:after { \\r\\n    color: #d00;\\r\\n    content: \\\"*\\\";\\r\\n    margin-left: 5px;\\r\\n    top:7px;\\r\\n  }\"","module.exports = \"<h3>Create Task</h3>\\r\\n<form (ngSubmit)=\\\"onSubmit()\\\" [formGroup]=\\\"form\\\">\\r\\n  <div class=\\\"form-group\\\">\\r\\n    <label class=\\\"control-label required\\\" for=\\\"task-key\\\">Key</label>\\r\\n    <input formControlName=\\\"key\\\"\\r\\n           type=\\\"text\\\"\\r\\n           name=\\\"key\\\" \\r\\n           class=\\\"form-control\\\" \\r\\n           id=\\\"task-key\\\" \\r\\n           placeholder=\\\"Enter task key\\\"\\r\\n           required>\\r\\n    <div class=\\\"alert\\\" *ngIf=\\\"!this.form.controls['key'].valid && this.form.controls['key'].touched\\\">{{invalidKeyMessage}}</div>\\r\\n  </div>\\r\\n  <div class=\\\"form-group\\\">\\r\\n    <label class=\\\"control-label required\\\" for=\\\"task-name\\\">Name</label>\\r\\n    <input formControlName=\\\"name\\\"\\r\\n           type=\\\"text\\\" \\r\\n           name=\\\"name\\\"\\r\\n           class=\\\"form-control\\\" \\r\\n           id=\\\"task-name\\\" \\r\\n           placeholder=\\\"Enter task name\\\"\\r\\n           required>\\r\\n    <div class=\\\"alert\\\" *ngIf=\\\"!this.form.controls['name'].valid && this.form.controls['name'].touched\\\">{{invalidNameMessage}}</div>\\r\\n  </div>\\r\\n  <div class=\\\"form-group\\\">\\r\\n      <label class=\\\"control-label\\\" for=\\\"task-description\\\">Description</label>\\r\\n      <textarea formControlName=\\\"description\\\"\\r\\n                class=\\\"form-control\\\" \\r\\n                name=\\\"description\\\"\\r\\n                id=\\\"task-description\\\" \\r\\n                rows=\\\"3\\\"></textarea>\\r\\n  </div>\\r\\n  <button [disabled]=\\\"form.invalid\\\" type=\\\"submit\\\" class=\\\"btn btn-primary\\\">Create</button>\\r\\n</form>\\r\\n\"","import { Component, OnInit } from '@angular/core';\r\nimport { TaskDto } from 'src/app/tasks/models/task-dto';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { TaskService } from '../task.service';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { Router } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-task-create',\r\n  templateUrl: './task-create.component.html',\r\n  styleUrls: ['./task-create.component.css']\r\n})\r\nexport class TaskCreateComponent implements OnInit {\r\n\r\n  form:FormGroup;\r\n  constructor(\r\n    private fb: FormBuilder, \r\n    private taskService:TaskService,\r\n    private router: Router) { \r\n    this.form = fb.group({\r\n      key: ['', Validators.compose([\r\n        Validators.required, Validators.minLength(3), Validators.maxLength(50)\r\n      ])],\r\n      name: ['', Validators.compose([\r\n        Validators.required, Validators.maxLength(200)\r\n      ]) ],\r\n      description: ''\r\n    });\r\n  }\r\n\r\n  invalidKeyMessage:string = 'Key is required (min 3, max 50 characters)';\r\n  invalidNameMessage:string = 'Name is required (max 200 characters)';\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  onSubmit() {\r\n    let task = <TaskDto>this.form.value;\r\n    this.taskService.addTask(task).subscribe(() => this.router.navigate(['/tasks']));\r\n  }\r\n}\r\n","module.exports = \".control-label.required:after { \\r\\n    color: #d00;\\r\\n    content: \\\"*\\\";\\r\\n    margin-left: 5px;\\r\\n    top:7px;\\r\\n  }\"","module.exports = \"<h3>Update Task</h3>\\r\\n<form (ngSubmit)=\\\"onSubmit()\\\" [formGroup]=\\\"form\\\">\\r\\n  <div class=\\\"form-group\\\">\\r\\n    <label class=\\\"control-label required\\\" for=\\\"task-key\\\">Key</label>\\r\\n    <input formControlName=\\\"key\\\"\\r\\n           type=\\\"text\\\"\\r\\n           name=\\\"key\\\" \\r\\n           class=\\\"form-control\\\" \\r\\n           id=\\\"task-key\\\" \\r\\n           placeholder=\\\"Enter task key\\\">\\r\\n  </div>\\r\\n  <div class=\\\"form-group\\\">\\r\\n    <label class=\\\"control-label required\\\" for=\\\"task-name\\\">Name</label>\\r\\n    <input formControlName=\\\"name\\\"\\r\\n           type=\\\"text\\\" \\r\\n           name=\\\"name\\\"\\r\\n           class=\\\"form-control\\\" \\r\\n           id=\\\"task-name\\\" \\r\\n           placeholder=\\\"Enter task name\\\"\\r\\n           required>\\r\\n    <div class=\\\"alert\\\" *ngIf=\\\"!this.form.controls['name'].valid && this.form.controls['name'].touched\\\">{{invalidNameMessage}}</div>\\r\\n  </div>\\r\\n  <div class=\\\"form-group\\\">\\r\\n      <label class=\\\"control-label\\\" for=\\\"task-description\\\">Description</label>\\r\\n      <textarea formControlName=\\\"description\\\"\\r\\n                class=\\\"form-control\\\" \\r\\n                name=\\\"description\\\"\\r\\n                id=\\\"task-description\\\" \\r\\n                rows=\\\"3\\\"></textarea>\\r\\n  </div>\\r\\n  <button [disabled]=\\\"form.invalid\\\" type=\\\"submit\\\" class=\\\"btn btn-primary\\\">Update</button>\\r\\n</form>\\r\\n\"","import { Component, OnInit } from '@angular/core';\r\nimport { Validators, FormGroup, FormBuilder } from '@angular/forms';\r\nimport { TaskDto } from 'src/app/tasks/models/task-dto';\r\nimport { TaskService } from '../task.service';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\nimport { ParamMap } from '@angular/router';\r\nimport { switchMap } from 'rxjs/operators';\r\nimport { FormControl } from '@angular/forms';\r\nimport { Params } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-task-update',\r\n  templateUrl: './task-update.component.html',\r\n  styleUrls: ['./task-update.component.css']\r\n})\r\nexport class TaskUpdateComponent implements OnInit {\r\n\r\n  form:FormGroup;\r\n  constructor(\r\n    private fb: FormBuilder, \r\n    private taskService:TaskService, \r\n    private router: Router,\r\n    private route: ActivatedRoute) { \r\n    this.form = fb.group({\r\n      taskid: new FormControl({value: '', readonly: true}),\r\n      key: new FormControl({value: '', readonly: true}),\r\n      name: ['', Validators.compose([Validators.required, Validators.maxLength(200)])],\r\n      description: '',\r\n    });\r\n  }\r\n\r\n  invalidNameMessage:string = 'Name is required (max 200 characters)';\r\n\r\n  ngOnInit() {\r\n    \r\n    let id = this.route.snapshot.paramMap.get('id');\r\n    this.taskService\r\n      .getTaskById(id)\r\n      .subscribe(q => {\r\n        Object.keys(q).forEach(w => this.form.controls[w].patchValue(q[w]))\r\n      });\r\n  }\r\n\r\n  onSubmit() {\r\n    let task = <TaskDto>this.form.value;\r\n    this.taskService.updateTask(task)\r\n      .subscribe(() => this.router.navigate(['/tasks']));\r\n  }\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { TaskDto } from './models/task-dto';\r\nimport { Observable, of, throwError } from 'rxjs';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { AppSettingsService } from '../../shared/app-settings.service';\r\nimport { HttpErrorResponse } from '@angular/common/http';\r\nimport { HttpParams } from '@angular/common/http';\r\nimport { map } from 'rxjs/operators';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class TaskService {\r\n\r\n  readonly baseUrl:string;\r\n  constructor(private http: HttpClient, private config: AppSettingsService) {\r\n    this.baseUrl = config.getSettings().API_URL;\r\n   }\r\n\r\n  getTasks(pageNumber: number, pageSize = 3, query = ''): Observable<[TaskDto[],number]> {\r\n    let url = `${this.baseUrl}/tasks`;\r\n\r\n    let params = new HttpParams();\r\n    params = params.append('page', pageNumber.toString());\r\n    params = params.append('pageCount', pageSize.toString());\r\n    params = params.append('query', query);\r\n\r\n    return this.http\r\n      .get<TaskDto[]>(url, { params: params, observe: 'response'})\r\n      .pipe(map(res => {\r\n        let payload:TaskDto[] = res.body;\r\n        let page:number = Number(res.headers.get('x-pagination'));\r\n        let output: [TaskDto[],number] = [payload, page];\r\n        return output;\r\n      }));\r\n  }\r\n\r\n  getTaskById (taskId: string) : Observable<TaskDto> {\r\n    let url = `${this.baseUrl}/tasks/${taskId}`;\r\n    return this.http.get<TaskDto>(url);\r\n  }\r\n\r\n  addTask (task: TaskDto) {\r\n    let url = `${this.baseUrl}/tasks`;\r\n    return this.http.post(url, task);\r\n  }\r\n\r\n  updateTask (task: TaskDto) {\r\n    let url = `${this.baseUrl}/tasks/${task.taskid}`;\r\n    return this.http.put(url, task);\r\n  }\r\n\r\n  deleteTask (id: string) {\r\n    let url = `${this.baseUrl}/tasks/${id}`;\r\n    return this.http.delete(url)\r\n  }\r\n}\r\n","module.exports = \".header-wrapper {\\r\\n    padding: 10px;\\r\\n}\\r\\n\\r\\n#create-task-button {\\r\\n    float:right;\\r\\n}\\r\\n\\r\\n#header {\\r\\n    float:left;\\r\\n}\\r\\n\\r\\n.clearfix {\\r\\n    float:none;\\r\\n}\\r\\n\\r\\n.center-cell {\\r\\n    text-align: center;\\r\\n}\\r\\n\\r\\n.search-box-swapper {\\r\\n    margin-top: 10px;\\r\\n    margin-bottom: 30px;\\r\\n}\"","module.exports = \"<div class='header-wrapper'>\\r\\n    <h3 id=\\\"header\\\">Tasks List</h3>\\r\\n    <button routerLink=\\\"/tasks/create\\\" id=\\\"create-task-button\\\" type=\\\"button\\\" class=\\\"btn btn-success\\\">Create Task</button>\\r\\n    <div class=\\\"clearfix\\\"></div>\\r\\n</div>\\r\\n<div class=\\\"search-box-swapper\\\">\\r\\n  <div class=\\\"input-group\\\">\\r\\n    <input (keyup.enter)=\\\"getTasks(1,textbox.value)\\\" #textbox class=\\\"form-control py-2\\\" type=\\\"search\\\" id=\\\"example-search-input\\\">\\r\\n    <span class=\\\"input-group-append\\\">\\r\\n      <button class=\\\"btn btn-outline-secondary\\\" type=\\\"button\\\" (click)=\\\"getTasks(1)\\\">Clear</button>\\r\\n      <button class=\\\"btn btn-outline-secondary\\\" type=\\\"button\\\" (click)=\\\"getTasks(1,textbox.value)\\\">\\r\\n        <fa name=\\\"search\\\"></fa>\\r\\n      </button>\\r\\n    </span>\\r\\n  </div>\\r\\n</div>\\r\\n\\r\\n<table class=\\\"table\\\">\\r\\n    <colgroup>\\r\\n      <col style=\\\"width:40%\\\">\\r\\n      <col style=\\\"width:40%\\\">\\r\\n      <col style=\\\"width:10%\\\">\\r\\n      <col style=\\\"width:10%\\\">\\r\\n    </colgroup>  \\r\\n    <thead>\\r\\n      <tr>\\r\\n        <th scope=\\\"col\\\">Key</th>\\r\\n        <th scope=\\\"col\\\">Name</th>\\r\\n        <th class=\\\"center-cell\\\" scope=\\\"col\\\">Update</th>\\r\\n        <th class=\\\"center-cell\\\" scope=\\\"col\\\">Delete</th>\\r\\n      </tr>\\r\\n    </thead>\\r\\n    <tbody>\\r\\n      <tr *ngFor=\\\"let task of tasks\\\">\\r\\n        <td>{{task.key}}</td>\\r\\n        <td>{{task.name}}</td>\\r\\n        <td class=\\\"center-cell\\\">\\r\\n          <button [routerLink]=\\\"['/tasks/update', task.taskid]\\\" type=\\\"button\\\" class=\\\"btn btn-warning\\\">Update</button>\\r\\n        </td>\\r\\n        <td class=\\\"center-cell\\\">\\r\\n          <button type=\\\"button\\\" class=\\\"btn btn-danger\\\" (click)=\\\"deleteTask(task.taskid)\\\">Delete</button>\\r\\n        </td>\\r\\n      </tr>\\r\\n    </tbody>\\r\\n  </table>\\r\\n  <app-pagination [total-records]=\\\"totalRecords\\\" [current-page]=\\\"currentPage\\\" [route-path]=\\\"'/tasks'\\\">\\r\\n\\r\\n  </app-pagination>\\r\\n\\r\\n\"","import { Component, OnInit } from '@angular/core';\r\nimport { TaskDto } from '../models/task-dto';\r\nimport { TaskService } from '../task.service';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { NavigationStart } from '@angular/router';\r\nimport { AppSettingsService } from '../../../shared/app-settings.service';\r\n\r\n@Component({\r\n  selector: 'app-tasks-list',\r\n  templateUrl: './tasks-list.component.html',\r\n  styleUrls: ['./tasks-list.component.css']\r\n})\r\nexport class TasksListComponent implements OnInit {\r\n\r\n  private readonly pageSize;\r\n\r\n  tasks: TaskDto[] = [];\r\n  totalRecords:number = 0;\r\n  currentPage:number = 1;\r\n\r\n  constructor(\r\n    private taskService: TaskService, \r\n    private route: ActivatedRoute, \r\n    private settings: AppSettingsService) {\r\n      this.pageSize = this.settings.getSettings().PAGE_SIZE;\r\n      route.queryParams.subscribe(q => {\r\n        this.currentPage = Number(q.page ? q.page : 1);\r\n        this.getTasks(this.currentPage)\r\n      });\r\n  }\r\n\r\n  ngOnInit() {\r\n\r\n  }\r\n\r\n  getTasks(page:number, query = '') {\r\n    this.taskService\r\n      .getTasks(page, this.pageSize, query)\r\n      .subscribe(q => {\r\n        this.tasks = q[0];\r\n        this.totalRecords = q[1];\r\n      });\r\n  }\r\n\r\n  deleteTask(id:string) {\r\n    this.taskService.deleteTask(id)\r\n      .subscribe(() => this.getTasks(this.currentPage));\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { TasksListComponent } from './tasks-list/tasks-list.component';\r\nimport { TaskCreateComponent } from './task-create/task-create.component';\r\nimport { TaskUpdateComponent } from './task-update/task-update.component';\r\nimport { TasksRouting } from './tasks.routing';\r\nimport { TaskService } from 'src/app/tasks/task.service';\r\nimport { ReactiveFormsModule } from '@angular/forms';\r\nimport { AppSettingsService } from '../../shared/app-settings.service';\r\nimport { PaginationComponent } from 'src/app/pagination/pagination.component';\r\nimport { AngularFontAwesomeModule } from 'angular-font-awesome';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    TasksRouting,\r\n    ReactiveFormsModule,\r\n    AngularFontAwesomeModule\r\n  ],\r\n  declarations: [\r\n    TasksListComponent, \r\n    TaskCreateComponent, \r\n    TaskUpdateComponent, \r\n    PaginationComponent],\r\n  providers: [TaskService,AppSettingsService]\r\n})\r\nexport class TasksModule { }\r\n","import { RouterModule, Routes } from '@angular/router';\r\nimport { TasksListComponent } from './tasks-list/tasks-list.component';\r\nimport { TaskCreateComponent } from './task-create/task-create.component';\r\nimport { TaskUpdateComponent } from './task-update/task-update.component';\r\n\r\nconst tasksRoutes: Routes = [\r\n    { path: 'tasks',\r\n        children: [\r\n            { path: '', component: TasksListComponent },\r\n            { path: 'create', component: TaskCreateComponent },\r\n            { path: 'update/:id', component: TaskUpdateComponent }\r\n        ]\r\n    }\r\n];\r\n  \r\nexport const TasksRouting = RouterModule.forChild(tasksRoutes);","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false\r\n};\r\n\r\n/*\r\n * In development mode, to ignore zone related error stack frames such as\r\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\r\n * import the following file, but please comment it out in production mode\r\n * because it will have performance impact when throw error\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.log(err));\r\n","import { Injectable } from '@angular/core';\r\nimport { AppSettings } from \"./app.settings\";\r\nimport { Observable,of } from 'rxjs';\r\n@Injectable()\r\nexport class AppSettingsService {\r\n  getSettings(): AppSettings {\r\n    return new AppSettings()\r\n  }\r\n}","export class AppSettings {\r\n    readonly API_URL: string = \"http://localhost:51117/api\"\r\n    readonly PAGE_SIZE: number = 3;\r\n}"],"sourceRoot":""}