{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/app.routing.ts","webpack:///./src/app/home/home.component.css","webpack:///./src/app/home/home.component.html","webpack:///./src/app/home/home.component.ts","webpack:///./src/app/not-found/not-found.component.css","webpack:///./src/app/not-found/not-found.component.html","webpack:///./src/app/not-found/not-found.component.ts","webpack:///./src/app/stakeholders/stakeholder-create/stakeholder-create.component.css","webpack:///./src/app/stakeholders/stakeholder-create/stakeholder-create.component.html","webpack:///./src/app/stakeholders/stakeholder-create/stakeholder-create.component.ts","webpack:///./src/app/stakeholders/stakeholder-update/stakeholder-update.component.css","webpack:///./src/app/stakeholders/stakeholder-update/stakeholder-update.component.html","webpack:///./src/app/stakeholders/stakeholder-update/stakeholder-update.component.ts","webpack:///./src/app/stakeholders/stakeholder.routing.ts","webpack:///./src/app/stakeholders/stakeholders-list/stakeholders-list.component.css","webpack:///./src/app/stakeholders/stakeholders-list/stakeholders-list.component.html","webpack:///./src/app/stakeholders/stakeholders-list/stakeholders-list.component.ts","webpack:///./src/app/stakeholders/stakeholders.module.ts","webpack:///./src/app/tasks/models/task-dto.ts","webpack:///./src/app/tasks/task-create/task-create.component.css","webpack:///./src/app/tasks/task-create/task-create.component.html","webpack:///./src/app/tasks/task-create/task-create.component.ts","webpack:///./src/app/tasks/task-update/task-update.component.css","webpack:///./src/app/tasks/task-update/task-update.component.html","webpack:///./src/app/tasks/task-update/task-update.component.ts","webpack:///./src/app/tasks/task.service.ts","webpack:///./src/app/tasks/tasks-list/tasks-list.component.css","webpack:///./src/app/tasks/tasks-list/tasks-list.component.html","webpack:///./src/app/tasks/tasks-list/tasks-list.component.ts","webpack:///./src/app/tasks/tasks.module.ts","webpack:///./src/app/tasks/tasks.routing.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts","webpack:///./src/shared/app-settings.service.ts","webpack:///./src/shared/app.settings.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error('Cannot find module \"' + req + '\".');\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \"#ph-logo {\\r\\n    width: 150px;\\r\\n}\\r\\n\\r\\n\"","module.exports = \"<nav class=\\\"navbar navbar-expand-md navbar-dark bg-dark fixed-top\\\">\\n  <a class=\\\"navbar-brand\\\" href=\\\"http://powerhub.com\\\">\\n    <img id=\\\"ph-logo\\\" src=\\\"/assets/img/ph-logo.png\\\"/>\\n  </a>\\n  <button class=\\\"navbar-toggler\\\" type=\\\"button\\\" data-toggle=\\\"collapse\\\" data-target=\\\"#navbarsExampleDefault\\\" aria-controls=\\\"navbarsExampleDefault\\\" aria-expanded=\\\"false\\\" aria-label=\\\"Toggle navigation\\\">\\n    <span class=\\\"navbar-toggler-icon\\\"></span>\\n  </button>\\n\\n  <div class=\\\"collapse navbar-collapse\\\" id=\\\"navbarsExampleDefault\\\">\\n    <ul class=\\\"navbar-nav mr-auto\\\">\\n      <li class=\\\"nav-item active\\\">\\n        <a class=\\\"nav-link\\\" routerLink=\\\"/tasks\\\" routerLinkActive=\\\"active\\\">Tasks</a>\\n      </li>\\n      <li class=\\\"nav-item active\\\">\\n        <a class=\\\"nav-link\\\" routerLink=\\\"/stakeholders\\\" routerLinkActive=\\\"active\\\">Stakeholders</a>\\n      </li>\\n    </ul>\\n  </div>\\n</nav>\\n\\n<main role=\\\"main\\\" class=\\\"container\\\">\\n  <router-outlet></router-outlet>\\n</main>\\n\\n\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'app';\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppComponent } from './app.component';\nimport { AppRouting } from './app.routing';\nimport { TasksModule } from 'src/app/tasks/tasks.module';\nimport { StakeholdersModule } from './stakeholders/stakeholders.module';\nimport { HomeComponent } from 'src/app/home/home.component';\nimport { NotFoundComponent } from 'src/app/not-found/not-found.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    HomeComponent,\n    NotFoundComponent\n  ],\n  imports: [\n    BrowserModule,\n    TasksModule,\n    StakeholdersModule,\n    AppRouting\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }","import { RouterModule, Routes } from '@angular/router';\r\nimport { HomeComponent } from 'src/app/home/home.component';\r\nimport { NotFoundComponent } from 'src/app/not-found/not-found.component';\r\n\r\nconst appRoutes: Routes = [\r\n    { path: '', redirectTo: 'home', pathMatch: 'full' },\r\n    { path: 'home', component: HomeComponent },\r\n    { path: '**', component: NotFoundComponent },\r\n];\r\n  \r\nexport const AppRouting = RouterModule.forRoot(appRoutes, { \r\n    useHash: true\r\n});","module.exports = \"\"","module.exports = \"<p>\\n  home works!\\n</p>\\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\nexport class HomeComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<p>\\n  not-found works!\\n</p>\\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-not-found',\n  templateUrl: './not-found.component.html',\n  styleUrls: ['./not-found.component.css']\n})\nexport class NotFoundComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<p>\\n  stakeholder-create works!\\n</p>\\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-stakeholder-create',\n  templateUrl: './stakeholder-create.component.html',\n  styleUrls: ['./stakeholder-create.component.css']\n})\nexport class StakeholderCreateComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<p>\\n  stakeholder-update works!\\n</p>\\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-stakeholder-update',\n  templateUrl: './stakeholder-update.component.html',\n  styleUrls: ['./stakeholder-update.component.css']\n})\nexport class StakeholderUpdateComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","import { RouterModule, Routes } from '@angular/router';\r\nimport { StakeholdersListComponent } from './stakeholders-list/stakeholders-list.component';\r\nimport { StakeholderCreateComponent } from 'src/app/stakeholders/stakeholder-create/stakeholder-create.component';\r\nimport { StakeholderUpdateComponent } from 'src/app/stakeholders/stakeholder-update/stakeholder-update.component';\r\n\r\nconst stakeholdersRoutes: Routes = [\r\n    { path: 'stakeholders',\r\n        children: [\r\n            { path: '', component: StakeholdersListComponent },\r\n            { path: 'create', component: StakeholderCreateComponent },\r\n            { path: 'update/:id', component: StakeholderUpdateComponent }\r\n        ]\r\n    }\r\n];\r\n  \r\nexport const StakeholdersRouting = RouterModule.forChild(stakeholdersRoutes);","module.exports = \"\"","module.exports = \"<p>\\n  stakeholders-list works!\\n</p>\\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-stakeholders-list',\n  templateUrl: './stakeholders-list.component.html',\n  styleUrls: ['./stakeholders-list.component.css']\n})\nexport class StakeholdersListComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { StakeholdersListComponent } from './stakeholders-list/stakeholders-list.component';\nimport { StakeholderCreateComponent } from './stakeholder-create/stakeholder-create.component';\nimport { StakeholderUpdateComponent } from './stakeholder-update/stakeholder-update.component';\nimport { StakeholdersRouting } from './stakeholder.routing';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    StakeholdersRouting\n  ],\n  declarations: [StakeholdersListComponent, StakeholderCreateComponent, StakeholderUpdateComponent]\n})\nexport class StakeholdersModule { }\n","export class TaskDto {\n    public id:string;\n    public key:string;\n    public name:string;\n    public description:string;\n\n    public constructor(init?:Partial<TaskDto>) {\n        Object.assign(this, init);\n    }\n}\n","module.exports = \".control-label.required:after { \\r\\n    color: #d00;\\r\\n    content: \\\"*\\\";\\r\\n    margin-left: 5px;\\r\\n    top:7px;\\r\\n  }\"","module.exports = \"<h3>Create Task</h3>\\n<form (ngSubmit)=\\\"onSubmit()\\\" [formGroup]=\\\"form\\\">\\n  <div class=\\\"form-group\\\">\\n    <label class=\\\"control-label required\\\" for=\\\"task-key\\\">Key</label>\\n    <input formControlName=\\\"key\\\"\\n           type=\\\"text\\\"\\n           name=\\\"key\\\" \\n           class=\\\"form-control\\\" \\n           id=\\\"task-key\\\" \\n           placeholder=\\\"Enter task key\\\"\\n           required>\\n    <div class=\\\"alert\\\" *ngIf=\\\"!this.form.controls['key'].valid && this.form.controls['key'].touched\\\">{{invalidKeyMessage}}</div>\\n  </div>\\n  <div class=\\\"form-group\\\">\\n    <label class=\\\"control-label required\\\" for=\\\"task-name\\\">Name</label>\\n    <input formControlName=\\\"name\\\"\\n           type=\\\"text\\\" \\n           name=\\\"name\\\"\\n           class=\\\"form-control\\\" \\n           id=\\\"task-name\\\" \\n           placeholder=\\\"Enter task name\\\"\\n           required>\\n    <div class=\\\"alert\\\" *ngIf=\\\"!this.form.controls['name'].valid && this.form.controls['name'].touched\\\">{{invalidNameMessage}}</div>\\n  </div>\\n  <div class=\\\"form-group\\\">\\n      <label class=\\\"control-label\\\" for=\\\"task-description\\\">Description</label>\\n      <textarea formControlName=\\\"description\\\"\\n                class=\\\"form-control\\\" \\n                name=\\\"description\\\"\\n                id=\\\"task-description\\\" \\n                rows=\\\"3\\\"></textarea>\\n  </div>\\n  <button [disabled]=\\\"form.invalid\\\" type=\\\"submit\\\" class=\\\"btn btn-primary\\\">Create</button>\\n</form>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { TaskDto } from 'src/app/tasks/models/task-dto';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\n\n@Component({\n  selector: 'app-task-create',\n  templateUrl: './task-create.component.html',\n  styleUrls: ['./task-create.component.css']\n})\nexport class TaskCreateComponent implements OnInit {\n\n  form:FormGroup;\n  constructor(private fb: FormBuilder) { \n    this.form = fb.group({\n      key: ['', Validators.compose([\n        Validators.required, Validators.minLength(3), Validators.maxLength(50)\n      ])],\n      name: ['', Validators.compose([\n        Validators.required, Validators.maxLength(200)\n      ]) ],\n      description: ''\n    });\n  }\n\n  invalidKeyMessage:string = 'Key is required (min 3, max 50 characters)';\n  invalidNameMessage:string = 'Key is required (max 200 characters)';\n\n  ngOnInit() {\n  }\n\n  onSubmit() {\n    \n  }\n}\n","module.exports = \"\"","module.exports = \"<p>\\n  task-update works!\\n</p>\\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-task-update',\n  templateUrl: './task-update.component.html',\n  styleUrls: ['./task-update.component.css']\n})\nexport class TaskUpdateComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { TaskDto } from './models/task-dto';\nimport { Observable, of, throwError } from 'rxjs';\nimport { HttpClient } from '@angular/common/http';\nimport { AppSettingsService } from '../../shared/app-settings.service';\nimport { HttpErrorResponse } from '@angular/common/http';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class TaskService {\n\n  constructor(private http: HttpClient, private config: AppSettingsService) { }\n\n  getTasks(): Observable<TaskDto[]> {\n  \n    return of([\n      new TaskDto({id:'22143042-4318-49d3-aef9-09960015c637', key: 'key_one', name: 'name_one', description: 'description_one'}),\n      new TaskDto({id:'974f0104-c0cc-479a-8386-ff4c83e26e4c', key: 'key_two', name: 'name_two', description: 'description_two'}),\n      new TaskDto({id:'ed99642b-1a56-4c35-a445-482459acd32f', key: 'key_three', name: 'name_three', description: 'description_three'})\n    ]);\n  }\n\n  addTask (task: TaskDto): Observable<TaskDto> {\n    let url = this.config.getSettings().apiUrl;\n    return this.http.post<TaskDto>(url, task);\n  }\n}\n","module.exports = \".header-wrapper {\\r\\n    padding: 10px;\\r\\n}\\r\\n\\r\\n#create-task-button {\\r\\n    float:right;\\r\\n}\\r\\n\\r\\n#header {\\r\\n    float:left;\\r\\n}\\r\\n\\r\\n.clearfix {\\r\\n    float:none;\\r\\n}\\r\\n\\r\\n.center-cell {\\r\\n    text-align: center;\\r\\n} \"","module.exports = \"<div class='header-wrapper'>\\n    <h3 id=\\\"header\\\">Tasks List</h3>\\n    <button routerLink=\\\"/tasks/create\\\" id=\\\"create-task-button\\\" type=\\\"button\\\" class=\\\"btn btn-success\\\">Create Task</button>\\n    <div class=\\\"clearfix\\\"></div>\\n</div>\\n\\n<table class=\\\"table\\\">\\n    <colgroup>\\n      <col style=\\\"width:40%\\\">\\n      <col style=\\\"width:40%\\\">\\n      <col style=\\\"width:10%\\\">\\n      <col style=\\\"width:10%\\\">\\n    </colgroup>  \\n    <thead>\\n      <tr>\\n        <th scope=\\\"col\\\">Key</th>\\n        <th scope=\\\"col\\\">Name</th>\\n        <th class=\\\"center-cell\\\" scope=\\\"col\\\">Update</th>\\n        <th class=\\\"center-cell\\\" scope=\\\"col\\\">Delete</th>\\n      </tr>\\n    </thead>\\n    <tbody>\\n      <tr *ngFor=\\\"let task of tasks\\\">\\n        <td>{{task.key}}</td>\\n        <td>{{task.name}}</td>\\n        <td class=\\\"center-cell\\\">\\n            <button type=\\\"button\\\" class=\\\"btn btn-warning\\\">Update</button>\\n        </td>\\n        <td class=\\\"center-cell\\\">\\n          <button type=\\\"button\\\" class=\\\"btn btn-danger\\\">Delete</button>\\n        </td>\\n      </tr>\\n    </tbody>\\n  </table>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { TaskDto } from '../models/task-dto';\nimport { TaskService } from '../task.service';\n\n@Component({\n  selector: 'app-tasks-list',\n  templateUrl: './tasks-list.component.html',\n  styleUrls: ['./tasks-list.component.css']\n})\nexport class TasksListComponent implements OnInit {\n\n  constructor(private taskService: TaskService) { }\n\n  tasks: TaskDto[];\n\n  ngOnInit() {\n    this.taskService.getTasks().subscribe(tasks => this.tasks = tasks);;\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { TasksListComponent } from './tasks-list/tasks-list.component';\nimport { TaskCreateComponent } from './task-create/task-create.component';\nimport { TaskUpdateComponent } from './task-update/task-update.component';\nimport { TasksRouting } from './tasks.routing';\nimport { TaskService } from 'src/app/tasks/task.service';\nimport { ReactiveFormsModule } from '@angular/forms';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    TasksRouting,\n    ReactiveFormsModule\n  ],\n  declarations: [TasksListComponent, TaskCreateComponent, TaskUpdateComponent],\n  providers: [TaskService]\n})\nexport class TasksModule { }\n","import { RouterModule, Routes } from '@angular/router';\r\nimport { TasksListComponent } from './tasks-list/tasks-list.component';\r\nimport { TaskCreateComponent } from './task-create/task-create.component';\r\nimport { TaskUpdateComponent } from './task-update/task-update.component';\r\n\r\nconst tasksRoutes: Routes = [\r\n    { path: 'tasks',\r\n        children: [\r\n            { path: '', component: TasksListComponent },\r\n            { path: 'create', component: TaskCreateComponent },\r\n            { path: 'update/:id', component: TaskUpdateComponent }\r\n        ]\r\n    }\r\n];\r\n  \r\nexport const TasksRouting = RouterModule.forChild(tasksRoutes);","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * In development mode, to ignore zone related error stack frames such as\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\n * import the following file, but please comment it out in production mode\n * because it will have performance impact when throw error\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n","import { Injectable } from '@angular/core';\r\nimport { AppSettings } from \"./app.settings\";\r\nimport { Observable,of } from 'rxjs';\r\n@Injectable()\r\nexport class AppSettingsService {\r\n  getSettings(): AppSettings {\r\n    return new AppSettings()\r\n  }\r\n}","export class AppSettings {\r\n    readonly apiUrl: string = \"http://www.fairwaytech.com\"\r\n}"],"sourceRoot":""}